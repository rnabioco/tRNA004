"0","# Function to parse a single FASTA file"
"0","parse_fasta <- function(file_path) {"
"0","    fasta_lines <- read_lines(file_path)"
"0",""
"0","    # Split lines into headers and sequences"
"0","    headers <- fasta_lines[str_detect(fasta_lines, ""^>"")]"
"0","    sequences <- fasta_lines[!str_detect(fasta_lines, ""^>"")]"
"0",""
"0","    # Function to parse headers"
"0","    parse_header <- function(header) {"
"0","        key_value_pairs <- str_split(str_remove_all(header, ""^>""), ""\\|"", simplify = FALSE)[[1]]"
"0","        key_value_pairs <- lapply(key_value_pairs, function(x) str_split(x, "":"", simplify = TRUE)[1, 2])"
"0","        return(as.data.frame(t(key_value_pairs), stringsAsFactors = FALSE))"
"0","    }"
"0",""
"0","    # Parse all headers"
"0","    parsed_headers <- do.call(rbind, lapply(headers, parse_header))"
"0",""
"0","    # Assign column names"
"0","    colnames(parsed_headers) <- c(""ID"", ""Name"", ""SOterm"", ""Type"", ""Subtype"", ""Feature"", ""Cellular_Localization"", ""Species"")"
"0",""
"0","    # Combine headers and sequences"
"0","    final_data <- data.frame(parsed_headers, Sequence = sequences)"
"0",""
"0","    # Tidy up the data"
"0","    final_data <- final_data %>%"
"0","        mutate(across(everything(), ~str_trim(.))) %>% "
"0","        mutate(across(where(is.character), ~str_remove_all(., pattern = ""^[^:]+:""))) %>%"
"0","        select(-ID, -SOterm, -Type)"
"0",""
"0","    return(final_data)"
"0","}"
